\TLV_version 1d: tl-x.org
\SV
/* verilator lint_off UNUSED*/  /* verilator lint_off DECLFILENAME*/  /* verilator lint_off BLKSEQ*/  /* verilator lint_off WIDTH*/  /* verilator lint_off SELRANGE*/  /* verilator lint_off PINCONNECTEMPTY*/  /* verilator lint_off DEFPARAM*/  /* verilator lint_off IMPLICIT*/  /* verilator lint_off COMBDLY*/  /* verilator lint_off SYNCASYNCNET*/  /* verilator lint_off UNOPTFLAT */  /* verilator lint_off UNSIGNED*/  /* verilator lint_off CASEINCOMPLETE*/  /* verilator lint_off UNDRIVEN*/  /* verilator lint_off VARHIDDEN*/  /* verilator lint_off CASEX*/  /* verilator lint_off CASEOVERLAP*/  /* verilator lint_off PINMISSING*/  /* verilator lint_off LATCH*/  /* verilator lint_off BLKANDNBLK*/  /* verilator lint_off MULTIDRIVEN*/  /* verilator lint_off NULLPORT*/  /* verilator lint_off EOFNEWLINE*/  /* verilator lint_off WIDTHCONCAT*/  /* verilator lint_off ASSIGNDLY*/  /* verilator lint_off MODDUP*/  /* verilator lint_off STMTDLY*/  /* verilator lint_off LITENDIAN*/  /* verilator lint_off INITIALDLY*/  /* verilator lint_off */  

//Your Verilog/System Verilog Code Starts Here:
`timescale 1ns / 1ps

module mux4to1(
    input [3:0] data,
    input [1:0] s,
	 input en,
    output reg out
    );
	 
	 always @(data, s, en)
	 begin
		if(en == 1)
			begin
			 if(s[0] == 0 && s[1] == 0)
				out = data[0];
			 else if(s[0] == 1 && s[1] == 0)
				out = data[1];
			 else if(s[0] == 0 && s[1] == 1)
				out = data[2];
			 else
				out = data[3];
			end
		else 
			out = 0;
	 end
endmodule

//Top Module Code Starts here:
	module top(input logic clk, input logic reset, input logic [31:0] cyc_cnt, output logic passed, output logic failed);
		logic  [3:0] data;//input
		logic  [1:0] s;//input
		logic  en;//input
		logic  out;//output
//The $random() can be replaced if user wants to assign values
		assign data = $random();
		assign s = $random();
		assign en = $random();
		mux4to1 mux4to1(.data(data), .s(s), .en(en), .out(out));
	
\TLV
//Add \TLV here if desired                                     
\SV
endmodule

